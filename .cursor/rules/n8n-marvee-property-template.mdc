---
description: 
globs: 
alwaysApply: true
---
# Template para Arquivos de Propriedades Modulares

Use este template para criar novos arquivos de propriedades no nó Marvee:

nested_code_snippet_typescript-replace_with-```typescript
// nodes/Marvee/properties/{{RESOURCE_NAME}}/{{FILE_NAME}}.ts
import { INodeProperties } from 'n8n-workflow';

export const {{propertyNameCamelCase}}: INodeProperties[] = [
    {
        displayName: 'Nome da Propriedade',
        name: 'propertyName',
        type: 'string',
        default: '',
        description: 'Descrição da propriedade.',
        displayOptions: {
            show: {
                resource: ['{{RESOURCE_VALUE}}'],
                operation: ['{{OPERATION_VALUE}}'],
            },
        },
    },
    // Adicione mais propriedades conforme necessário
];
close_nested_code_snippet-replace_with-```

## Tipos de Arquivos de Propriedades

### 1. Operações (*.operations.ts)
Para definir as operações disponíveis de um recurso:

nested_code_snippet_typescript-replace_with-```typescript
export const resourceOperations: INodeProperties[] = [
    {
        displayName: 'Operação',
        name: 'operation',
        type: 'options',
        noDataExpression: true,
        displayOptions: {
            show: {
                resource: ['resourceName'],
            },
        },
        options: [
            {
                name: 'Nome da Operação',
                value: 'operation-value',
                action: 'Ação da operação',
                description: 'Descrição da operação',
            },
        ],
        default: 'operation-value',
        description: 'Define a operação a ser realizada.',
    },
];
close_nested_code_snippet-replace_with-```

### 2. Campos de Operação (*.fields.ts)
Para campos específicos de uma operação:

nested_code_snippet_typescript-replace_with-```typescript
export const operationFields: INodeProperties[] = [
    {
        displayName: 'Campo Obrigatório',
        name: 'requiredField',
        type: 'string',
        required: true,
        displayOptions: {
            show: {
                resource: ['resourceName'],
                operation: ['operation-name'],
            },
        },
        default: '',
        description: 'Descrição do campo obrigatório.',
    },
];
close_nested_code_snippet-replace_with-```

## Lembre-se sempre de:

1. **Importar no index.ts** - Adicione sua nova propriedade no arquivo index.ts do recurso
2. **Usar displayOptions** - Sempre defina quando o campo deve aparecer
3. **Documentar bem** - Inclua descriptions claras
4. **Validar tipos** - Use os tipos corretos (string, number, options, etc.)
5. **Seguir nomenclatura** - Use camelCase para nomes de variáveis
